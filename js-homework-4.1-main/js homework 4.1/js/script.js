// false && true || true (|| логический оператор  ИЛИ, если есть хотя бы 1 оператор true, то в консоль тоже выведет true )
//console.log(false && true || true);

// false && (true || true);(&& логический оператор И выводит false если хотя бы один из операторов не является true)
//console.log(false && (true || true));

// +'40' + +'2';(консоль выведет тип данных число 42, потому как произошло преобразорвание String в Number при помощи унарного +)
//console.log(+'40' + +'2');

// '2' + 3 ** 2; (выведет строку 2 и 9)  с помощью плюса происходит конкатенация строк 3 в квадрате это 9, двойка не меняется
//console.log('2' + 3 ** 2);

// 3 ** 2 / 3; (выведет число 3, 3 в квадрате = 9, 9/3 = 3 )
//console.log(3 ** 2 / 3);

// 3 ** (9 / 3);(выполняется действие в скобках результат = 3, 3 в 3 степени 27)
// console.log(3 ** (9 / 3));

// '10' + (5 === 6);(сравнение не верно, 5 не равно 6, результат строка 10 и результат сравнения false)
//console.log('10' + (5 === 6));

// '10' — 5 === 6;(сравнение не верно, (строка 10) - (строка 5) выведет цифру 5, 5 не равно 6)
//console.log('10' - '5' === 6);

// undefined + 1;(операция не верна undefined не является числом)
//console.log(undefined + 1);

// (+null == false) < 1;(двойное равно приводит обе величины к общему типу и сравнивает их. унарный плюс приводит null  к числу)
// console.log((+null == false) < 1);



// (+null == false) < 1 ** 5;
//console.log((+null == false) < 1 ** 5);



//let number = 5;
// 2 * ++number; готово
// 2 * number --; 
// console.log(number);


// результат операции 12,префиксный инкремент добавляет еденицу к переменной, 6 умножить на 2 = 12
// console.log(2 * ++number);

//результат операции 10, постфиксный декремент отнимает единицу от переменной но это не выводится в результате
//console.log(2 * number--);